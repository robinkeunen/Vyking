# -----------------------------------------------------------------------------
# ASTVisitor.py
# authors : Robin Keunen, Pierre Vyncke
# -----------------------------------------------------------------------------
import src.ast as ast
import src.visit as visit


class ASTNodeVisitor(object):
    @visit.on('ASTNode')
    def visit(self, ASTNode):
        """
        Genereic method that initiliazes
        the dynamic dispatcher.
        """
        pass

    @visit.when(ast.ASTNode)
    def visit(self, ASTNode):
        """
        Will run for nodes that do not specifically
        match the provided type.
        """
        pass

    @visit.when(ast.Expression)
    def visit(self, BinopExpression):
        """Matches nodes of type BinopExpression"""
        # some code
        pass
